version: '3'

services:

  postgres-dev:
    image: 'postgres:14'
    container_name: 'postgres-dev'
    volumes:
      - ./postgres_dev:/var/lib/postgres/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - 5433:5432

  postgres-test:
    image: 'postgres:14'
    container_name: 'postgres-test'
    volumes:
      - ./postgres-test:/var/lib/postgres/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - 5434:5432

  postgres-stage:
    image: 'postgres:14'
    container_name: 'postgres-stage'
    volumes:
      - ./postgres-stage:/var/lib/postgres/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - 5435:5432

  eureka-service:
    image: eureka-server
    container_name: eureka-server
    build: ./eureka-server
    volumes:
      - ../src:/opt/app
    ports:
      - 8761:8761

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeper-server
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 10000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-server
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  authentication-service:
    image: authentication-service
    container_name: authentication-service
    build: ./authentication-service
    volumes:
      - ../src:/opt/app
    environment:
      - SPRING_PROFILES_ACTIVE=stage
    ports:
      - 8082:8082

  apigateway-service:
    image: apigateway-service
    container_name: apigateway-service
    build: ./api-gateway
    volumes:
      - ../src:/opt/app
    ports:
      - 8089:8089
    environment:
      - SPRING_PROFILES_ACTIVE=stage

  customer-service:
    image: customer-service
    container_name: customer-service
    build: ./customer-service
    volumes:
      - ../src:/opt/app
    ports:
      - 8081:8081
    environment:
      - SPRING_PROFILES_ACTIVE=stage